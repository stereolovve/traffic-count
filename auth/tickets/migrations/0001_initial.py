# Generated by Django 5.1.3 on 2025-06-27 18:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("padroes", "0002_alter_padraocontagem_options_padraocontagem_order"),
        ("trabalhos", "0003_alter_ponto_localizacao"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "turno",
                    models.CharField(
                        choices=[("MANHÃ", "Manhã"), ("NOITE", "Noite")],
                        max_length=10,
                        verbose_name="Turno",
                    ),
                ),
                (
                    "cam",
                    models.CharField(
                        help_text="Identificação da câmera",
                        max_length=100,
                        verbose_name="CAM",
                    ),
                ),
                (
                    "mov",
                    models.CharField(
                        help_text="Identificação do movimento",
                        max_length=100,
                        verbose_name="MOV",
                    ),
                ),
                (
                    "duracao",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Duração do vídeo em horas",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0.01),
                            django.core.validators.MaxValueValidator(999.99),
                        ],
                        verbose_name="Duração (horas)",
                    ),
                ),
                (
                    "periodo_inicio",
                    models.TimeField(
                        help_text="Horário de início da contagem",
                        verbose_name="Início do Período",
                    ),
                ),
                (
                    "periodo_fim",
                    models.TimeField(
                        help_text="Horário de fim da contagem",
                        verbose_name="Fim do Período",
                    ),
                ),
                (
                    "data",
                    models.DateField(help_text="Data da contagem", verbose_name="Data"),
                ),
                (
                    "nivel",
                    models.PositiveIntegerField(
                        help_text="Nível de complexidade",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Nível",
                    ),
                ),
                (
                    "prioridade",
                    models.CharField(
                        choices=[
                            ("BAIXA", "Baixa"),
                            ("MEDIA", "Média"),
                            ("ALTA", "Alta"),
                            ("URGENTE", "Urgente"),
                        ],
                        default="MEDIA",
                        max_length=10,
                        verbose_name="Prioridade",
                    ),
                ),
                (
                    "observacao",
                    models.TextField(
                        blank=True,
                        help_text="Observações adicionais",
                        null=True,
                        verbose_name="Observação",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AGUARDANDO", "Aguardando"),
                            ("INICIADO", "Iniciado"),
                            ("CONTANDO", "Contando"),
                            ("PAUSADO", "Pausado"),
                            ("FINALIZADO", "Finalizado"),
                        ],
                        default="AGUARDANDO",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "data_atribuicao",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data e hora em que o ticket foi atribuído",
                        null=True,
                        verbose_name="Data de Atribuição",
                    ),
                ),
                (
                    "data_finalizacao",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data e hora em que o ticket foi finalizado",
                        null=True,
                        verbose_name="Data de Finalização",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "codigo",
                    models.ForeignKey(
                        help_text="Código do trabalho",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trabalhos.codigo",
                        verbose_name="Código",
                    ),
                ),
                (
                    "coordenador",
                    models.ForeignKey(
                        limit_choices_to={"setor": "SUPER"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets_coordenados",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Coordenador",
                    ),
                ),
                (
                    "padrao",
                    models.ForeignKey(
                        help_text="Padrão de contagem",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="padroes.padraocontagem",
                        verbose_name="Padrão",
                    ),
                ),
                (
                    "pesquisador",
                    models.ForeignKey(
                        blank=True,
                        help_text="Usuário responsável pela pesquisa",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tickets_pesquisados",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Pesquisador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket",
                "verbose_name_plural": "Tickets",
                "ordering": ["-data", "-criado_em"],
                "indexes": [
                    models.Index(
                        fields=["status"], name="tickets_tic_status_0e5646_idx"
                    ),
                    models.Index(fields=["data"], name="tickets_tic_data_12ffb0_idx"),
                    models.Index(
                        fields=["coordenador"], name="tickets_tic_coorden_8d353b_idx"
                    ),
                    models.Index(
                        fields=["pesquisador"], name="tickets_tic_pesquis_c75417_idx"
                    ),
                ],
            },
        ),
    ]
